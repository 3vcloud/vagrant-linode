{"name":"Vagrant-linode","tagline":"A Vagrant plugin that adds a Linode provider to Vagrant, allowing Vagrant to control and provision Linodes.","body":"Linode Vagrant Provider\r\n==============================\r\n\r\n`vagrant-linode` is a provider plugin for Vagrant that supports the\r\nmanagement of [Linode](https://www.linode.com/) linodes\r\n(instances).\r\n\r\n**NOTE:** The Chef provisioner is no longer supported by default (as of 0.2.0).\r\nPlease use the `vagrant-omnibus` plugin to install Chef on Vagrant-managed\r\nmachines. This plugin provides control over the specific version of Chef\r\nto install.\r\n\r\nCurrent features include:\r\n- create and destroy linodes\r\n- power on and off linodes\r\n- rebuild a linode\r\n- provision a linode with the shell or Chef provisioners\r\n- setup a SSH public key for authentication\r\n- create a new user account during linode creation\r\n\r\nThe provider has been tested with Vagrant 1.6.3+ using Ubuntu 14.04 LTS and\r\nDebian 7.5 guest operating systems.\r\n\r\nInstall\r\n-------\r\nInstallation of the provider requires two steps:\r\n\r\n1. Install the provider plugin using the Vagrant command-line interface:\r\n\r\n        $ vagrant plugin install vagrant-linode\r\n\r\n\r\n**NOTE:** If you are using a Mac, and this plugin would not work caused by SSL certificate problem,\r\nYou may need to specify certificate path explicitly.\r\nYou can verify actual certificate path by running:\r\n\r\n```bash\r\nruby -ropenssl -e \"p OpenSSL::X509::DEFAULT_CERT_FILE\"\r\n```\r\n\r\nThen, add the following environment variable to your\r\n`.bash_profile` script and `source` it:\r\n\r\n```bash\r\nexport SSL_CERT_FILE=/usr/local/etc/openssl/cert.pem\r\n```\r\n\r\nConfigure\r\n---------\r\nOnce the provider has been installed, you will need to configure your project\r\nto use it. The most basic `Vagrantfile` to create a linode on Linode\r\nis shown below:\r\n\r\n```ruby\r\nVagrant.configure('2') do |config|\r\n\r\n  config.vm.provider :linode do |provider, override|\r\n    override.ssh.private_key_path = '~/.ssh/id_rsa'\r\n    override.vm.box = 'linode'\r\n    override.vm.box_url = \"https://github.com/displague/vagrant-linode/raw/master/box/linode.box\"\r\n\r\n    provider.token = 'API_KEY'\r\n    provider.distribution = 'Ubuntu 14.04 LTS'\r\n    provider.datacenter = 'newark'\r\n    provider.plan = 'Linode 1024'\r\n    # provider.planid = <int>\r\n    # provider.paymentterm = <*1*,12,24>\r\n    # provider.datacenterid = <int>\r\n    # provider.image = <string>\r\n    # provider.imageid = <int>\r\n    # provider.private_networking = <boolean>\r\n    # provider.stackscript = <string>\r\n    # provider.stackscriptid = <int>\r\n    # provider.distributionid = <int>\r\n  end\r\nend\r\n```\r\n\r\nPlease note the following:\r\n- You *must* specify the `override.ssh.private_key_path` to enable authentication\r\n  with the linode. The provider will create a new Linode SSH key using\r\n  your public key which is assumed to be the `private_key_path` with a *.pub*\r\n  extension.\r\n- You *must* specify your Linode Personal Access Token. This may be\r\n  found on the control panel within the *Apps &amp; API* section.\r\n\r\n**Supported Configuration Attributes**\r\n\r\nThe following attributes are available to further configure the provider:\r\n- `provider.distribution` - A string representing the distribution to use when\r\n   creating a new linode (e.g. `Debian 7.5`). The available options may\r\n   be found on Linode's new linode [form](https://www.linode.com/distributions).\r\n   It defaults to `Ubuntu 14.04 LTS`.\r\n- `provider.datacenter` - A string representing the region to create the new\r\n   linode in. It defaults to `newark`.\r\n- `provider.plan` - A string representing the size to use when creating a\r\n  new linode (e.g. `Linode 2048`). It defaults to `Linode 1024`.\r\n- `provider.private_networking` - A boolean flag indicating whether to enable\r\n  a private network interface (if the region supports private networking). It\r\n  defaults to `false`.\r\n- `provider.ssh_key_name` - A string representing the name to use when creating\r\n  a Linode SSH key for linode authentication. It defaults to `Vagrant`.\r\n- `provider.setup` - A boolean flag indicating whether to setup a new user\r\n  account and modify sudo to disable tty requirement. It defaults to `true`.\r\n  If you are using a tool like [packer](https://packer.io) to create\r\n  reusable snapshots with user accounts already provisioned, set to `false`.\r\n- `provider.label` - A string representing the Linode label to assign when\r\n  creating a new linode\r\n- `provider.group` - A string representing the Linode's Display group to assign\r\n  when creating a new linode\r\n\r\nThe provider will create a new user account with the specified SSH key for\r\nauthorization if `config.ssh.username` is set and the `provider.setup`\r\nattribute is `true`.\r\n\r\n### provider.plan\r\n\r\nEach Linode Tier has been assigned a Plan Identifcation Number.\r\nCurrent Plan-ID table follows:\r\n\r\n| PlanID  | Plan                      |\r\n|:------- |:------------------------- |\r\n|    1    |  1GB Plan (Linode 1024)   |\r\n|    2    |  2GB Plan (Linode 2048)   |\r\n|    4    |  4GB Plan (Linode 4096)   |\r\n|    6    |  8GB Plan (Linode 8192)   |\r\n|    7    | 16GB Plan (Linode 16384)  |\r\n|    8    | 32GB Plan (Linode 32768)  |\r\n|    9    | 48GB Plan (Linode 49152)  |\r\n|   10    | 64GB Plan (Linode 65536)  |\r\n|   12    | 96GB Plan (Linode 98304)  |\r\n\r\n```\r\ncurl -X POST \"https://api.linode.com/?api_action=avail.plans\" \\\r\n     --data-ascii api_key=\"$LINODE_API_KEY\" \\\r\n     2>/dev/null | jq '.DATA [] | .PLANID,.LABEL'\r\n```\r\n\r\nMore detail: [Linode API - Plans](https://www.linode.com/api/utility/avail.plans)\r\n\r\n### provider.datacenter\r\n\r\nEach region has been specified with a Data Center ID.\r\nCurrent Region-ID table is:\r\n\r\n| DatacenterID | Datacenter | Location            |\r\n|:-------      |:------     |:--------------------|\r\n|   4          | atlanta    | Atlanta, GA, USA    |\r\n|   2          | dallas     | Dallas, TX, USA     |\r\n|   3          | fremont    | Fremont, CA, USA    |\r\n|   7          | london     | London, England, UK |\r\n|   6          | newark     | Newark, NJ, USA     |\r\n|   8          | tokyo      | Tokyo, JP           |\r\n|   9          | singapore  | Singapore, SGP      |\r\n\r\nYou can find latest datacenter ID number using Linode API call.\r\n\r\n- example call.\r\n\r\n```\r\ncurl -X POST \"https://api.linode.com/?api_action=avail.datacenters\" \\\r\n     --data-ascii api_key=\"$LINODE_API_KEY\" \\\r\n     2>/dev/null | jq '.DATA [] | .DATACENTERID,.ABBR,.LOCATION'\r\n```\r\n\r\nMore detail: [Linode API - Datacenters](https://www.linode.com/api/utility/avail.datacenters)\r\n\r\nRun\r\n---\r\nAfter creating your project's `Vagrantfile` with the required configuration\r\nattributes described above, you may create a new linode with the following\r\ncommand:\r\n\r\n    $ vagrant up --provider=linode\r\n\r\nThis command will create a new linode, setup your SSH key for authentication,\r\ncreate a new user account, and run the provisioners you have configured.\r\n\r\nThe  environment variable `VAGRANT_DEFAULT_PROVIDER` can be set to `linode` to avoid sending `--provider=linode` on each `vagrant up`. \r\n\r\n**Supported Commands**\r\n\r\nThe provider supports the following Vagrant sub-commands:\r\n- `vagrant destroy` - Destroys the linode instance.\r\n- `vagrant ssh` - Logs into the linode instance using the configured user\r\n  account.\r\n- `vagrant halt` - Powers off the linode instance.\r\n- `vagrant provision` - Runs the configured provisioners and rsyncs any\r\n  specified `config.vm.synced_folder`.\r\n- `vagrant reload` - Reboots the linode instance.\r\n- `vagrant rebuild` - Destroys the linode instance and recreates it with the\r\n  same IP address which was previously assigned.\r\n- `vagrant status` - Outputs the status (active, off, not created) for the\r\n  linode instance.\r\n\r\nContribute\r\n----------\r\nTo contribute, clone the repository, and use [Bundler](http://gembundler.com)\r\nto install dependencies:\r\n\r\n    $ bundle\r\n\r\nTo run the provider's tests:\r\n\r\n    $ bundle exec rake test\r\n\r\nYou can now make modifications. Running `vagrant` within the Bundler\r\nenvironment will ensure that plugins installed in your Vagrant\r\nenvironment are not loaded.\r\n\r\n[![Join the chat at https://gitter.im/displague/vagrant-linode](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/displague/vagrant-linode?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n[![Code Climate](https://codeclimate.com/github/displague/vagrant-linode/badges/gpa.svg)](https://codeclimate.com/github/displague/vagrant-linode)\r\n[![Test Coverage](https://codeclimate.com/github/displague/vagrant-linode/badges/coverage.svg)](https://codeclimate.com/github/displague/vagrant-linode)\r\n[![Gem Version](https://badge.fury.io/rb/vagrant-linode.svg)](http://badge.fury.io/rb/vagrant-linode)\r\n[![Dependency Status](https://gemnasium.com/displague/vagrant-linode.svg)](https://gemnasium.com/displague/vagrant-linode)\r\n[![MIT Licensed](https://img.shields.io/badge/license-MIT-green.svg)](https://tldrlegal.com/license/mit-license)\r\n\r\n","google":"UA-334928-7","note":"Don't delete this file! It's used internally to help with page regeneration."}